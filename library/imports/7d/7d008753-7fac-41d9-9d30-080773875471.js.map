{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Types = require('Types');\r\nvar Utils = require('Utils');\r\nvar ActorPlayingState = Types.ActorPlayingState;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 所有明牌\r\n        cards: {\r\n            default: [],\r\n            serializable: false,\r\n            visible: false\r\n        },\r\n        // 暗牌，demo 暂存\r\n        holeCard: {\r\n            default: null,\r\n            serializable: false,\r\n            visible: false\r\n        },\r\n\r\n        // 手上最接近 21 点的点数（有可能超过 21 点）\r\n        bestPoint: {\r\n            get: function () {\r\n                var minMax = Utils.getMinMaxPoint(this.cards);\r\n                return minMax.max;\r\n            }\r\n        },\r\n\r\n        // 牌型，不考虑是否爆牌\r\n        hand: {\r\n            get: function () {\r\n                var count = this.cards.length;\r\n                if (this.holeCard) {\r\n                    ++count;\r\n                }\r\n                if (count >= 5) {\r\n                    return Types.Hand.FiveCard;\r\n                }\r\n                if (count === 2 && this.bestPoint === 21) {\r\n                    return Types.Hand.BlackJack;\r\n                }\r\n                return Types.Hand.Normal;\r\n            }\r\n        },\r\n\r\n        canReport: {\r\n            get: function () {\r\n                return this.hand !== Types.Hand.Normal;\r\n            },\r\n            visible: false\r\n        },\r\n\r\n        renderer: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        state: {\r\n            default: ActorPlayingState.Normal,\r\n            notify: function (oldState) {\r\n                if (this.state !== oldState) {\r\n                    this.renderer.updateState();\r\n                }\r\n            },\r\n            type: ActorPlayingState,\r\n            serializable: false,\r\n        }\r\n    },\r\n\r\n    init: function () {\r\n        this.ready = true;\r\n        this.renderer = this.getComponent('ActorRenderer');\r\n    },\r\n\r\n    addCard: function (card) {\r\n        this.cards.push(card);\r\n        this.renderer.onDeal(card, true);\r\n\r\n        var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\r\n        if (Utils.isBust(cards)) {\r\n            this.state = ActorPlayingState.Bust;\r\n        }\r\n    },\r\n\r\n    addHoleCard: function (card) {\r\n        this.holeCard = card;\r\n        this.renderer.onDeal(card, false);\r\n    },\r\n\r\n    stand: function () {\r\n        this.state = ActorPlayingState.Stand;\r\n    },\r\n\r\n    revealHoldCard: function () {\r\n        if (this.holeCard) {\r\n            this.cards.unshift(this.holeCard);\r\n            this.holeCard = null;\r\n            this.renderer.onRevealHoldCard();\r\n        }\r\n    },\r\n\r\n    // revealNormalCard: function() {\r\n    //     this.onRevealNormalCard();\r\n    // },\r\n\r\n    report: function () {\r\n        this.state = ActorPlayingState.Report;\r\n    },\r\n\r\n    reset: function () {\r\n        this.cards = [];\r\n        this.holeCard = null;\r\n        this.reported = false;\r\n        this.state = ActorPlayingState.Normal;\r\n        this.renderer.onReset();\r\n    }\r\n});\r\n"
  ]
}