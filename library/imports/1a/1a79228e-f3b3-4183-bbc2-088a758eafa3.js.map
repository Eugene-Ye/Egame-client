{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Game = require('Game');\r\nvar Types = require('Types');\r\nvar Utils = require('Utils');\r\nvar ActorPlayingState = Types.ActorPlayingState;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        playerInfo: cc.Node,\r\n        stakeOnTable: cc.Node,\r\n        cardInfo: cc.Node,\r\n        cardPrefab: cc.Prefab,\r\n        anchorCards: cc.Node,\r\n        spPlayerName: cc.Sprite,\r\n        labelPlayerName: cc.Label,\r\n        labelTotalStake: cc.Label,\r\n        spPlayerPhoto: cc.Sprite,\r\n        callCounter: cc.ProgressBar,\r\n        labelStakeOnTable: cc.Label,\r\n        spChips: {\r\n            default: [],\r\n            type: cc.Sprite\r\n        },\r\n        labelCardInfo: cc.Label,\r\n        spCardInfo: cc.Sprite,\r\n        animFX: cc.Node,\r\n        cardSpace: 0\r\n    },\r\n\r\n    onLoad: function () {\r\n    },\r\n\r\n    init: function ( playerInfo, playerInfoPos, stakePos, turnDuration, switchSide ) {\r\n        // actor\r\n        this.actor = this.getComponent('Actor');\r\n\r\n        // nodes\r\n        this.isCounting = false;\r\n        this.counterTimer = 0;\r\n        this.turnDuration = turnDuration;\r\n\r\n        this.playerInfo.position = playerInfoPos;\r\n        this.stakeOnTable.position = stakePos;\r\n        this.labelPlayerName.string = playerInfo.name;\r\n        this.updateTotalStake(playerInfo.gold);\r\n        var photoIdx = playerInfo.photoIdx % 5;\r\n        this.spPlayerPhoto.spriteFrame = Game.instance.assetMng.playerPhotos[photoIdx];\r\n        // fx\r\n        this.animFX = this.animFX.getComponent('FXPlayer');\r\n        this.animFX.init();\r\n        this.animFX.show(false);\r\n\r\n        this.cardInfo.active = false;\r\n\r\n        // switch side\r\n        if (switchSide) {\r\n            this.spCardInfo.getComponent('SideSwitcher').switchSide();\r\n            this.spPlayerName.getComponent('SideSwitcher').switchSide();\r\n        }\r\n    },\r\n\r\n    update: function (dt) {\r\n        if (this.isCounting) {\r\n            this.callCounter.progress = this.counterTimer/this.turnDuration;\r\n            this.counterTimer += dt;\r\n            if (this.counterTimer >= this.turnDuration) {\r\n                this.isCounting = false;\r\n                this.callCounter.progress = 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    initDealer: function () {\r\n        // actor\r\n        this.actor = this.getComponent('Actor');\r\n        // fx\r\n        this.animFX = this.animFX.getComponent('FXPlayer');\r\n        this.animFX.init();\r\n        this.animFX.show(false);\r\n    },\r\n\r\n    updateTotalStake: function (num) {\r\n        this.labelTotalStake.string = '$' + num;\r\n    },\r\n\r\n    startCountdown: function() {\r\n        if (this.callCounter) {\r\n            this.isCounting = true;\r\n            this.counterTimer = 0;\r\n        }\r\n    },\r\n\r\n    resetCountdown: function() {\r\n        if (this.callCounter) {\r\n            this.isCounting = false;\r\n            this.counterTimer = 0;\r\n            this.callCounter.progress = 0;\r\n        }\r\n    },\r\n\r\n    playBlackJackFX: function () {\r\n        this.animFX.playFX('blackjack');\r\n    },\r\n\r\n    playBustFX: function () {\r\n        this.animFX.playFX('bust');\r\n    },\r\n\r\n    onDeal: function (card, show) {\r\n        var newCard = cc.instantiate(this.cardPrefab).getComponent('Card');\r\n        this.anchorCards.addChild(newCard.node);\r\n        newCard.init(card);\r\n        newCard.reveal(show);\r\n\r\n        var startPos = cc.p(0, 0);\r\n        var index = this.actor.cards.length - 1;\r\n        var endPos = cc.p(this.cardSpace * index, 0);\r\n        newCard.node.setPosition(startPos);\r\n        this._updatePointPos(endPos.x);\r\n\r\n        var moveAction = cc.moveTo(0.5, endPos);\r\n        var callback = cc.callFunc(this._onDealEnd, this);\r\n        newCard.node.runAction(cc.sequence(moveAction, callback));\r\n    },\r\n\r\n    _onDealEnd: function(target) {\r\n        this.resetCountdown();\r\n        if(this.actor.state === ActorPlayingState.Normal) {\r\n            this.startCountdown();\r\n        }\r\n        this.updatePoint();\r\n        // this._updatePointPos(pointX);\r\n    },\r\n\r\n    onReset: function () {\r\n        this.cardInfo.active = false;\r\n\r\n        this.anchorCards.removeAllChildren();\r\n\r\n        this._resetChips();\r\n    },\r\n\r\n    onRevealHoldCard: function () {\r\n        var card = cc.find('cardPrefab', this.anchorCards).getComponent('Card');\r\n        card.reveal(true);\r\n        this.updateState();\r\n    },\r\n\r\n    updatePoint: function () {\r\n        this.cardInfo.active = true;\r\n        this.labelCardInfo.string = this.actor.bestPoint;\r\n\r\n        switch (this.actor.hand) {\r\n            case Types.Hand.BlackJack:\r\n                this.animFX.show(true);\r\n                this.animFX.playFX('blackjack');\r\n                break;\r\n            case Types.Hand.FiveCard:\r\n                // TODO\r\n                break;\r\n        }\r\n    },\r\n\r\n    _updatePointPos: function (xPos) {\r\n        // cc.log(this.name + ' card info pos: ' + xPos);\r\n        this.cardInfo.setPosition(xPos + 50, 0);\r\n    },\r\n\r\n    showStakeChips: function(stake) {\r\n        var chips = this.spChips;\r\n        var count = 0;\r\n        if (stake > 50000) {\r\n            count = 5;\r\n        } else if (stake > 25000) {\r\n            count = 4;\r\n        } else if (stake > 10000) {\r\n            count = 3;\r\n        } else if (stake > 5000) {\r\n            count = 2;\r\n        } else if (stake > 0) {\r\n            count = 1;\r\n        }\r\n        for (var i = 0; i < count; ++i) {\r\n            chips[i].enabled = true;\r\n        }\r\n    },\r\n\r\n    _resetChips: function () {\r\n        for (var i = 0; i < this.spChips.length; ++i) {\r\n            this.spChips.enabled = false;\r\n        }\r\n    },\r\n\r\n    updateState: function () {\r\n        switch (this.actor.state) {\r\n            case ActorPlayingState.Normal:\r\n                this.cardInfo.active = true;\r\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\r\n                this.updatePoint();\r\n                break;\r\n            case ActorPlayingState.Bust:\r\n                var min = Utils.getMinMaxPoint(this.actor.cards).min;\r\n                this.labelCardInfo.string = '爆牌(' + min + ')';\r\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texBust;\r\n                this.cardInfo.active = true;\r\n                this.animFX.show(true);\r\n                this.animFX.playFX('bust');\r\n                this.resetCountdown();\r\n                break;\r\n            case ActorPlayingState.Stand:\r\n                var max = Utils.getMinMaxPoint(this.actor.cards).max;\r\n                this.labelCardInfo.string = '停牌(' + max + ')';\r\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\r\n                this.resetCountdown();\r\n                // this.updatePoint();\r\n                break;\r\n        }\r\n    },\r\n});\r\n"
  ]
}