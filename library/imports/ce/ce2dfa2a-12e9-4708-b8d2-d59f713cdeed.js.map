{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,KAAK;;AAEd,cAAU,EAAE;;AAER,iBAAS,EAAE;AACP,eAAG,EAAE,eAAY;AACb,oBAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5E,oBAAI,MAAM,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACzC,uBAAO,MAAM,CAAC,GAAG,CAAC;aACrB;AACD,oBAAQ,EAAE,IAAI;SACjB;KACJ;;AAED,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,MAAM,EAAE,CAAC;AACd,YAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC9B;;;AAGD,WAAO,EAAE,mBAAY;AACjB,YAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,YAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,YAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;;AAG/B,YAAI,SAAS,KAAK,EAAE,EAAE;AAClB,mBAAO,KAAK,CAAC;SAChB;;;AAGD,YAAI,SAAS,IAAI,EAAE,GAAG,EAAE,EAAE;AACtB,mBAAO,IAAI,CAAC;SACf;;AAED,YAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AAClC,YAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;AAE3D,gBAAQ,OAAO;AACX,iBAAK,KAAK,CAAC,OAAO,CAAC,GAAG;AAClB,uBAAO,IAAI,CAAC;AAAA,AAChB,iBAAK,KAAK,CAAC,OAAO,CAAC,IAAI;AACnB,uBAAO,KAAK,CAAC;AAAA,SACpB;;AAED,eAAO,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KAC9B;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var Actor = require('Actor');\r\nvar Utils = require('Utils');\r\n\r\ncc.Class({\r\n    extends: Actor,\r\n\r\n    properties: {\r\n        // 手上最接近 21 点的点数（有可能超过 21 点）\r\n        bestPoint: {\r\n            get: function () {\r\n                var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\r\n                var minMax = Utils.getMinMaxPoint(cards);\r\n                return minMax.max;\r\n            },\r\n            override: true\r\n        },\r\n    },\r\n\r\n    init: function () {\r\n        this._super();\r\n        this.renderer.initDealer();\r\n    },\r\n\r\n    // 返回是否要牌\r\n    wantHit: function () {\r\n        var Game = require('Game');\r\n        var Types = require('Types');\r\n\r\n        var bestPoint = this.bestPoint;\r\n\r\n        // 已经最大点数\r\n        if (bestPoint === 21) {\r\n            return false;\r\n        }\r\n\r\n        // 不论抽到什么牌肯定不会爆，那就接着抽\r\n        if (bestPoint <= 21 - 10) {\r\n            return true;\r\n        }\r\n\r\n        var player = Game.instance.player;\r\n        var outcome = Game.instance._getPlayerResult(player, this);\r\n\r\n        switch (outcome) {\r\n            case Types.Outcome.Win:\r\n                return true;\r\n            case Types.Outcome.Lose:\r\n                return false;\r\n        }\r\n\r\n        return this.bestPoint < 17;\r\n    },\r\n});\r\n"
  ]
}