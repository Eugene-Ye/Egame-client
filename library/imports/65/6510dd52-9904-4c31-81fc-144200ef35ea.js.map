{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var State = require('state.com');\r\n\r\nvar instance;\r\nvar model;\r\nvar playing;\r\n\r\nfunction on (message) {\r\n    return function (msgToEvaluate) {\r\n        return msgToEvaluate === message;\r\n    };\r\n}\r\n\r\nvar evaluating = false;\r\n\r\nexports = {\r\n    init: function (target) {\r\n        // send log messages, warnings and errors to the console\r\n        State.console = console;\r\n\r\n        model = new State.StateMachine(\"root\");\r\n        var initial = new State.PseudoState(\"init-root\", model, State.PseudoStateKind.Initial);\r\n\r\n        // 当前这一把的状态\r\n\r\n        var bet = new State.State(\"下注\", model);\r\n        playing = new State.State(\"已开局\", model);\r\n        var settled = new State.State(\"结算\", model);\r\n\r\n        initial.to(bet);\r\n        bet.to(playing).when(on(\"deal\"));\r\n        playing.to(settled).when(on(\"end\"));\r\n        settled.to(bet).when(on(\"bet\"));\r\n\r\n        bet.entry(function () {\r\n            target.onBetState(true);\r\n        });\r\n        bet.exit(function () {\r\n            target.onBetState(false);\r\n        });\r\n\r\n        settled.entry(function () {\r\n            target.onEndState(true);\r\n        });\r\n        settled.exit(function () {\r\n            target.onEndState(false);\r\n        });\r\n\r\n        // 开局后的子状态\r\n\r\n        var initialP = new State.PseudoState(\"init 已开局\", playing, State.PseudoStateKind.Initial);\r\n        var deal = new State.State(\"发牌\", playing);\r\n        //var postDeal = new State.State(\"等待\", playing);    // 询问玩家是否买保险，双倍、分牌等\r\n        var playersTurn = new State.State(\"玩家决策\", playing);\r\n        var dealersTurn = new State.State(\"庄家决策\", playing);\r\n\r\n        initialP.to(deal);\r\n        deal.to(playersTurn).when(on(\"dealed\"));\r\n        playersTurn.to(dealersTurn).when(on(\"player acted\"));\r\n\r\n        deal.entry(function () {\r\n            target.onEnterDealState();\r\n        });\r\n        playersTurn.entry(function () {\r\n            target.onPlayersTurnState(true);\r\n        });\r\n        playersTurn.exit(function () {\r\n            target.onPlayersTurnState(false);\r\n        });\r\n        dealersTurn.entry(function () {\r\n            target.onEnterDealersTurnState();\r\n        });\r\n\r\n        // create a State machine instance\r\n        instance = new State.StateMachineInstance(\"fsm\");\r\n        State.initialise(model, instance);\r\n    },\r\n\r\n    toDeal: function () {\r\n        this._evaluate('deal');\r\n    },\r\n    toBet: function () {\r\n        this._evaluate('bet');\r\n    },\r\n    onDealed: function () {\r\n        this._evaluate('dealed');\r\n    },\r\n    onPlayerActed: function () {\r\n        this._evaluate('player acted');\r\n    },\r\n    onDealerActed: function () {\r\n        this._evaluate('end');\r\n    },\r\n\r\n    _evaluate: function (message) {\r\n        if (evaluating) {\r\n            // can not call fsm's evaluate recursively\r\n            setTimeout(function () {\r\n                State.evaluate(model, instance, message);\r\n            }, 1);\r\n            return;\r\n        }\r\n        evaluating = true;\r\n        State.evaluate(model, instance, message);\r\n        evaluating = false;\r\n    },\r\n\r\n    _getInstance: function () {\r\n        return instance;\r\n    },\r\n\r\n    _getModel: function () {\r\n        return model;\r\n    }\r\n};\r\n\r\nmodule.exports = exports;\r\n"
  ]
}